#!/bin/bash

# Define o nome do diret√≥rio fonte e do arquivo de sa√≠da.
SRC_DIR="mercadolivre-integration"
OUTPUT_ZIP="${SRC_DIR}.zip"

echo "üî® Iniciando build do plugin..."

# Verifica se o diret√≥rio fonte existe.
if [ ! -d "$SRC_DIR" ]; then
    echo "‚ùå ERRO: Diret√≥rio fonte '${SRC_DIR}' n√£o encontrado!"
    exit 1
fi

# Remove o arquivo .zip antigo, se existir, para evitar duplicatas.
echo "üßπ Limpando build antigo..."
rm -f "$OUTPUT_ZIP"

# Navega para o diret√≥rio pai, cria o zip com o conte√∫do do diret√≥rio do plugin.
# O nome da pasta principal dentro do zip ser√° o nome do SRC_DIR.
echo "üì¶ Compactando o diret√≥rio '${SRC_DIR}' em '${OUTPUT_ZIP}'..."
zip -r "$OUTPUT_ZIP" "$SRC_DIR"

# Verifica se o zip foi criado com sucesso.
if [ $? -eq 0 ] && [ -f "$OUTPUT_ZIP" ]; then
    FILE_SIZE=$(stat -f%z "$OUTPUT_ZIP" 2>/dev/null || stat -c%s "$OUTPUT_ZIP" 2>/dev/null)
    FILE_SIZE_KB=$((FILE_SIZE / 1024))
    
    echo ""
    echo "üéâ BUILD CONCLU√çDO COM SUCESSO!"
    echo "üìÅ Arquivo: $OUTPUT_ZIP"
    echo "üìè Tamanho: ${FILE_SIZE_KB}KB"
    
    echo ""
    echo "üß™ Testando integridade do arquivo..."
    if zip -T "$OUTPUT_ZIP" > /dev/null 2>&1; then
        echo "‚úÖ Arquivo zip √≠ntegro"
    else
        echo "‚ùå ERRO: Arquivo zip corrompido!"
        exit 1
    fi
else
    echo "‚ùå ERRO: Falha ao criar o arquivo zip"
    exit 1
fi

echo ""
echo "‚ú® Build finalizado: $OUTPUT_ZIP"
